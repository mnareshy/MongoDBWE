INSERT

> db.movies.insertOne({"title":"bahubali","year":"2014","imdb":"2014bb"})
> db.movies.insertOne({"title":"bahubali","year":"2014","_id":"2014bb"})

> db.movies.insertMany([
	 {"title":"bahubali","year":"2014","_id":"2014bb1"},
	 {"title":"bahubali2","year":"2017","_id":"2017bb"},
	 {"title":"bale bale magadivoi","year":"2015","_id":"2015bbmv"},
	 {"title":"premam","year":"2016","_id":"2016pm"} ])
	 
> db.movies.insertMany([
	 {"title":"bahubali","year":"2014","_id":"2014bb1"},
	 {"title":"bahubali2","year":"2017","_id":"2017bb"},
	 {"title":"bale bale magadivoi","year":"2015","_id":"2015bbmv"},
	 {"title":"premam","year":"2016","_id":"2016pm"},
	 {"title":"premam","year":"2016","_id":"2016pm1"}],
	 {"ordered":false});
	 
// by default inserMany is ordered , which means that if there is an error in one of the document
//it wont insert the remaining documents.
//if the "ordered":false , it will still continue to insert other records! 

// Mongo Db creates the Object ID if we dongt supply , and the format as follows
// Date-MAC Address-PID-counter    its a 12 digit hex string(4-3-2-3 bytes respectively)	 
	 
DELETE

>db.movies.drop()

SEARCH - READINg DOCUMENTS

>db.movies.find()
>db.movies.find().pretty()

// pretty() helps for formatting

>db.movies.find({"year":"2016"})
>db.movies.find({"title":"premam","year":"2016"})

>db.movies.find().count();

>db.movies.find({"rating.score":70}) // "" necessary when using nested document fields

>db.movies.find({"actors":["chiranjeevi","balakrishna","ramyakrishna","sudha"]})  
// only finds if all the array elements matches
//And only if the order also matches

>db.movies.find({"actors":"chiranjeevi"})
//to search one element matches

>db.movies.find({"actors":"chiranjeevi","actors":"balakrishna"})
//to search multiple elements matches 


>db.movies.find({"actors.0":"chiranjeevi"})
//to search one element matches that too in a specific location

// find command gives the result in batch, maximum batch size not exceeding 1 mb
//to iterate further use "it" command

CURSORS

>var c =  db.movies.find();
>var doc = function(){return c.hasNext()?c.next():null;}
>c.objsLeftInBatch();

PROJECTIONS

>db.movies.find({"title":"movie1"},{"title":1}) 
//this is explicitly including , _id comes by default
>db.movies.find({"title":"movie1"},{"title":1,"_id":0})
//this excludes _id 
>db.movies.find({"title":"movie1"},{"actors":0,"_id":0})
//this is explicitly exluding some fields






















